{"version":3,"sources":["actions/index.js","components/NavBar.js","components/Home.js","components/algorithms/HandleDispatch.js","components/algorithms/BubbleSort.js","components/algorithms/InsertionSort.js","components/algorithms/SelectionSort.js","components/algorithms/MergeSort.js","components/algorithms/QuickSort.js","components/algorithms/HeapSort.js","components/visualizer/Functions.js","components/SetSizeOptions.js","components/SetSpeedOptions.js","components/visualizer/BodyContents.js","components/visualizer/BubbleSortVisualizer.js","components/visualizer/InsertionSortVisualizer.js","components/visualizer/SelectionSortVisualizer.js","components/visualizer/MergeSortVisualizer.js","components/visualizer/QuickSortVisualizer.js","components/visualizer/HeapSortVisualizer.js","components/App.js","reducers/index.js","reducers/setIndex.js","reducers/running.js","reducers/array.js","reducers/swappers.js","reducers/sorted.js","reducers/algorithm.js","reducers/size.js","reducers/speed.js","index.js"],"names":["setCurrentBubble","array","type","payload","deleteCurrentIndex","setArray","setRunning","boolean","setSorted","setSwappers","updateAlgorithm","algorithm","setSize","size","NavBar","useSelector","state","isRunning","dispatch","useDispatch","onAlgorithmChange","className","to","onClick","e","preventDefault","Home","useEffect","$","css","HandleDispatch","toDispatch","speed","length","dispatchFunction","shift","setTimeout","map","num","index","BubbleSort","stateArray","slice","sorted","round","i","push","swap","j","temp","InsertionSort","SelectionSort","currentIdx","smallestIdx","MergeSort","finalArray","MergeSortHelper","leftIdx","rightIdx","arrayLength","middle","Math","floor","leftHalf","rightHalf","midIdx","leftSort","rightSort","isLastMerge","handleMergeSort","leftArray","rightArray","sortedArray","Array","k","newArray","splice","QuickSort","quickSortHelper","startIdx","endIdx","pivot","HeapSort","buildMaxHeap","siftDown","heap","firstChildIdx","secondChildIdx","idxToSwap","generateArray","random","SetSizeOptions","useState","open","setOpen","ref","useRef","selectedSize","selected","setSelected","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","renderedOptions","title","value","option","generateArraySize","style","border","color","disabled","SetSpeedOptions","speeds","BodyContents","TypeOfSorting","finishedIdx","setIndex","compareIdx","currentSwappers","selectedSpeed","speedDefault","pow","barWidth","setBarWidth","numWidth","offsetWidth","renderArray","idx","background","includes","height","width","doSorting","sort","BubbbleSortVisualizer","InsertionSortVisualizer","SelectionSortVisualizer","MergeSortVisualizer","QuickSortVisualizer","HeapSortVisualizer","App","path","exact","component","combineReducers","action","currentSorted","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.98d21742.chunk.js","sourcesContent":["export const setCurrentBubble = (array) => {\n  return {\n    type: \"SET_CURRENT_INDEX\",\n    payload: array,\n  };\n};\n\nexport const deleteCurrentIndex = (array) => {\n  return {\n    type: \"DELETE_CURRENT_INDEX\",\n    payload: array,\n  };\n};\n\nexport const setArray = (array) => {\n  return {\n    type: \"SET_ARRAY\",\n    payload: array,\n  };\n};\n\nexport const setRunning = (boolean) => {\n  return {\n    type: \"SET_RUNNING\",\n    payload: boolean,\n  };\n};\n\nexport const setSorted = (array) => {\n  return {\n    type: \"SET_SORTED\",\n    payload: array,\n  };\n};\n\nexport const setSwappers = (array) => {\n  return {\n    type: \"SET_SWAPPERS\",\n    payload: array,\n  };\n};\n\nexport const updateAlgorithm = (algorithm) => {\n  return {\n    type: \"UPDATE_ALGORITHM\",\n    payload: algorithm,\n  };\n};\n\nexport const setSize = (size) => {\n  return {\n    type: \"SET_SIZE\",\n    payload: size,\n  };\n};\n\nexport const setSpeed = (speed) => {\n  return {\n    type: \"SET_SPEED\",\n    payload: speed,\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateAlgorithm } from \"../actions\";\n\nconst NavBar = () => {\n  const algorithm = useSelector((state) => state.algorithm);\n  const isRunning = useSelector((state) => state.isRunning);\n  const dispatch = useDispatch();\n  const onAlgorithmChange = (type) => {\n    dispatch(updateAlgorithm(type));\n  };\n  return (\n    <div className={`ui ${algorithm ? \"inverted\" : \"\"} segment`}>\n      <div\n        className={`ui ${\n          algorithm ? \"inverted\" : \"\"\n        } secondary pointing menu navbar`}\n      >\n        <Link\n          to=\"/\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"\") : e.preventDefault()\n          }\n          className={algorithm === \"\" ? \"active item\" : \"item\"}\n        >\n          Home\n        </Link>\n        <Link\n          to=\"/bubblesort-visualizer\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"BubbleSort\") : e.preventDefault()\n          }\n          className={algorithm === \"BubbleSort\" ? \"active item\" : \"item\"}\n        >\n          Bubble Sort\n        </Link>\n        <Link\n          to=\"/insertionsort-visualizer\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"InsertionSort\") : e.preventDefault()\n          }\n          className={algorithm === \"InsertionSort\" ? \"active item\" : \"item\"}\n        >\n          Insertion Sort\n        </Link>\n        <Link\n          to=\"/selectionsort-visualizer\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"SelectionSort\") : e.preventDefault()\n          }\n          className={algorithm === \"SelectionSort\" ? \"active item\" : \"item\"}\n        >\n          Selection Sort\n        </Link>\n        <Link\n          to=\"/mergesort-visualizer\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"MergeSort\") : e.preventDefault()\n          }\n          className={algorithm === \"MergeSort\" ? \"active item\" : \"item\"}\n        >\n          Merge Sort\n        </Link>\n        <Link\n          to=\"/quicksort-visualizer\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"QuickSort\") : e.preventDefault()\n          }\n          className={algorithm === \"QuickSort\" ? \"active item\" : \"item\"}\n        >\n          Quick Sort\n        </Link>\n        <Link\n          to=\"/heapsort-visualizer\"\n          onClick={(e) =>\n            !isRunning ? onAlgorithmChange(\"HeapSort\") : e.preventDefault()\n          }\n          className={algorithm === \"HeapSort\" ? \"active item\" : \"item\"}\n        >\n          Heap Sort\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\nimport \"./styling/Home.css\";\n\nconst Home = () => {\n  useEffect(() => {\n    $(\"body\").css(\"background-color\", \"white\");\n    $(\".segment\").css(\n      \"background\",\n      \"linear-gradient(to right,rgba(126, 213, 111, 0.8),rgba(40, 180, 133, 0.8))\"\n    );\n    $(\".segment\").css(\"margin\", \"0\");\n    $(\".segment\").css(\"border\", \"0\");\n  }, []);\n\n  return (\n    <body>\n      <header className=\"header\">\n        <div className=\"header__logo-box\"></div>\n        <div className=\"header__text-box\">\n          <h1 className=\"heading-primary\">\n            <span className=\"heading-primary--main\">Sorting</span>\n            <span className=\"heading-primary--main\">Visualizer</span>\n          </h1>\n          <Link\n            to=\"/bubblesort-visualizer\"\n            className=\"btn btn--white btn--animated\"\n          >\n            Start\n          </Link>\n        </div>\n      </header>\n      {/* <div className=\"info-container\">\n        <h1 className=\"info__header\">Bubble Sort</h1>\n        <p className=\"info__description\">\n          Bubble sort, sometimes referred to as sinking sort, is a simple\n          sorting algorithm that repeatedly steps through the list, compares\n          adjacent elements and swaps them if they are in the wrong order. The\n          pass through the list is repeated until the list is sorted.\n        </p>\n      </div>\n      <div className=\"info-container\">\n        <h1 className=\"info__header\">Insertion Sort</h1>\n      </div>\n      <div className=\"info-container\">\n        <h1 className=\"info__header\">Selection Sort</h1>\n      </div>\n      <div className=\"info-container\">\n        <h1 className=\"info__header\">Merge Sort</h1>\n      </div>\n      <div className=\"info-container\">\n        <h1 className=\"info__header\">Quick Sort</h1>\n      </div>\n      <div className=\"info-container\">\n        <h1 className=\"info__header\">Heap Sort</h1>\n      </div> */}\n    </body>\n  );\n};\n\nexport default Home;\n","import {\n  setArray,\n  setRunning,\n  setCurrentBubble,\n  setSorted,\n  setSwappers,\n} from \"../../actions\";\n\nexport const HandleDispatch = (toDispatch, dispatch, array, speed) => {\n  if (!toDispatch.length) {\n    //dispatch(setCurrentBubble(array.map((num, index) => index)));\n    setTimeout(() => {\n      dispatch(setSorted(array.map((num, index) => index)));\n      dispatch(setRunning(false));\n    }, 900);\n    return;\n  }\n  //let dispatchFunction =\n  // toDispatch[0].length > 3\n  //   ? setArray\n  //   : toDispatch[0].length === 3 || toDispatch[0].length === 0\n  //   ? setSwappers\n  //   : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\"\n  //   ? setSorted\n  //   : setCurrentBubble;\n  // ----------------------------------------------\n  // toDispatch[0].length > 3 ? setArray : setSwappers;\n  //dispatch(dispatchFunction(toDispatch.shift()));\n  let dispatchFunction =\n    toDispatch[0].length > 3\n      ? setArray\n      : toDispatch[0].length === 2\n      ? setSwappers\n      : setCurrentBubble;\n\n  dispatch(dispatchFunction(toDispatch.shift()));\n  setTimeout(() => {\n    HandleDispatch(toDispatch, dispatch, array, speed);\n  }, speed);\n};\n","// import {\n//   setArray,\n//   setRunning,\n//   setCurrentBubble,\n//   setSorted,\n//   setSwappers,\n//   deleteCurrentIndex,\n// } from \"../../actions\";\nimport { HandleDispatch } from \"./HandleDispatch\";\n\nexport const BubbleSort = (stateArray, dispatch, speed) => {\n  let array = stateArray.slice(0),\n    toDispatch = [],\n    sorted = false,\n    round = 0;\n\n  while (!sorted) {\n    sorted = true;\n    for (let i = 0; i < array.length - 1 - round; i++) {\n      //toDispatch.push([i, i + 1]);\n      toDispatch.push([i, i + 1]);\n      if (array[i] > array[i + 1]) {\n        //toDispatch.push([i, i + 1, true]);\n        swap(array, i, i + 1);\n        sorted = false;\n        toDispatch.push(array.slice(0));\n        //toDispatch.push([]);\n      }\n    }\n    toDispatch.push(array.length - 1 - round);\n    round++;\n  }\n  while (round < array.length) {\n    toDispatch.push(array.length - 1 - round);\n    round++;\n  }\n  HandleDispatch(toDispatch, dispatch, array, speed);\n  return array;\n};\n\nconst swap = (array, i, j) => {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n};\n","// import { setArray, setRunning, setSorted, setSwappers } from \"../../actions\";\nimport { HandleDispatch } from \"./HandleDispatch\";\n\nexport const InsertionSort = (stateArray, dispatch, speed) => {\n  let array = stateArray.slice(0),\n    toDispatch = [],\n    round = 0;\n\n  for (let i = 0; i < array.length; i++) {\n    for (let j = i; j > 0; j--) {\n      toDispatch.push([j, j - 1]);\n      if (array[j] < array[j - 1]) {\n        swap(array, j, j - 1);\n        toDispatch.push(array.slice(0));\n      }\n    }\n  }\n  while (round < array.length) {\n    toDispatch.push(array.length - 1 - round);\n    round++;\n  }\n  HandleDispatch(toDispatch, dispatch, array, speed);\n  return array;\n};\n\nconst swap = (array, i, j) => {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n};\n","// import { setArray, setRunning, setSorted, setSwappers } from \"../../actions\";\nimport { HandleDispatch } from \"./HandleDispatch\";\n\nexport const SelectionSort = (stateArray, dispatch, speed) => {\n  let array = stateArray.slice(0),\n    toDispatch = [],\n    currentIdx = array.length - 1,\n    round = 0;\n\n  while (currentIdx > 0) {\n    let smallestIdx = currentIdx;\n    for (let i = 0; i < array.length - round; i++) {\n      toDispatch.push([smallestIdx, i]);\n      if (array[smallestIdx] < array[i]) {\n        smallestIdx = i;\n      }\n    }\n    swap(array, smallestIdx, currentIdx);\n    toDispatch.push(array.slice(0));\n    currentIdx--;\n    toDispatch.push(array.length - 1 - round);\n    round++;\n  }\n  while (round < array.length) {\n    toDispatch.push(array.length - 1 - round);\n    round++;\n  }\n  HandleDispatch(toDispatch, dispatch, array, speed);\n  return array;\n};\n\nconst swap = (array, i, j) => {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n};\n","import { HandleDispatch } from \"./HandleDispatch\";\n\nexport const MergeSort = (stateArray, dispatch, speed) => {\n  let array = stateArray,\n    toDispatch = [array],\n    finalArray = MergeSortHelper(\n      array,\n      toDispatch,\n      0,\n      array.length - 1,\n      array.length\n    );\n\n  toDispatch.push(finalArray);\n  HandleDispatch(toDispatch, dispatch, array, speed);\n};\n\nconst MergeSortHelper = (array, toDispatch, leftIdx, rightIdx, arrayLength) => {\n  if (array.length <= 1) {\n    return array;\n  }\n  let middle = Math.floor(array.length / 2),\n    leftHalf = array.slice(0, middle),\n    rightHalf = array.slice(middle),\n    midIdx = Math.floor((leftIdx + rightIdx + 1) / 2),\n    leftSort = MergeSortHelper(\n      leftHalf,\n      toDispatch,\n      leftIdx,\n      midIdx - 1,\n      arrayLength\n    ),\n    rightSort = MergeSortHelper(\n      rightHalf,\n      toDispatch,\n      midIdx,\n      rightIdx,\n      arrayLength\n    ),\n    isLastMerge = false;\n  if (leftSort.length + rightSort.length === arrayLength) {\n    isLastMerge = true;\n  }\n  let sortedArray = handleMergeSort(\n    leftSort,\n    rightSort,\n    toDispatch,\n    leftIdx,\n    rightIdx,\n    isLastMerge\n  );\n\n  return sortedArray;\n};\n\nconst handleMergeSort = (\n  leftArray,\n  rightArray,\n  toDispatch,\n  leftIdx,\n  rightIdx,\n  isLastMerge\n) => {\n  let currentIdx = leftIdx,\n    midIdx = (leftIdx + rightIdx + 1) / 2;\n  const sortedArray = new Array(leftArray.length + rightArray.length);\n  let i = 0,\n    j = 0,\n    k = 0,\n    round = 0,\n    num = 1;\n\n  if (isLastMerge) {\n    num = 2;\n  }\n\n  while (i < leftArray.length && j < rightArray.length) {\n    if (isLastMerge) {\n      toDispatch.push(round);\n      round++;\n    }\n    const newArray = toDispatch[toDispatch.length - num].slice(0);\n    toDispatch.push([midIdx, currentIdx]);\n    if (leftArray[i] <= rightArray[j]) {\n      sortedArray[k] = leftArray[i];\n      currentIdx++;\n      i++;\n      toDispatch.push(newArray);\n    } else {\n      sortedArray[k] = rightArray[j];\n      newArray.splice(midIdx, 1);\n      newArray.splice(currentIdx, 0, rightArray[j]);\n      midIdx++;\n      currentIdx++;\n      j++;\n      toDispatch.push(newArray);\n    }\n    k++;\n  }\n\n  while (i < leftArray.length) {\n    sortedArray[k] = leftArray[i];\n    i++;\n    k++;\n    if (isLastMerge) {\n      toDispatch.push(round);\n      round++;\n    }\n  }\n\n  while (j < rightArray.length) {\n    sortedArray[k] = rightArray[j];\n    j++;\n    k++;\n    if (isLastMerge) {\n      toDispatch.push(round);\n      round++;\n    }\n  }\n\n  return sortedArray;\n};\n","import { HandleDispatch } from \"./HandleDispatch\";\n\nexport const QuickSort = (stateArray, dispatch, speed) => {\n  let array = stateArray,\n    toDispatch = [array.slice(0)];\n  quickSortHelper(array, 0, array.length - 1, toDispatch);\n\n  toDispatch.push(array);\n  HandleDispatch(toDispatch, dispatch, array, speed);\n};\n\nconst quickSortHelper = (array, startIdx, endIdx, toDispatch) => {\n  if (startIdx >= endIdx) {\n    toDispatch.push(endIdx);\n    return;\n  }\n\n  const pivot = array[startIdx];\n  let leftIdx = startIdx + 1,\n    rightIdx = endIdx;\n\n  while (leftIdx <= rightIdx) {\n    toDispatch.push([leftIdx, rightIdx]);\n    if (array[leftIdx] > pivot && array[rightIdx] < pivot) {\n      swap(array, leftIdx, rightIdx, toDispatch);\n    }\n\n    if (array[leftIdx] <= pivot) {\n      leftIdx++;\n    }\n\n    if (array[rightIdx] >= pivot) {\n      rightIdx--;\n    }\n  }\n  swap(array, startIdx, rightIdx, toDispatch);\n  toDispatch.push(rightIdx);\n  const leftSubarrayIsSmaller =\n    rightIdx - 1 - startIdx < endIdx - (rightIdx + 1);\n  if (leftSubarrayIsSmaller) {\n    quickSortHelper(array, startIdx, rightIdx - 1, toDispatch);\n    quickSortHelper(array, rightIdx + 1, endIdx, toDispatch);\n  } else {\n    quickSortHelper(array, rightIdx + 1, endIdx, toDispatch);\n    quickSortHelper(array, startIdx, rightIdx - 1, toDispatch);\n  }\n};\n\nconst swap = (array, i, j, toDispatch) => {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n  toDispatch.push(array.slice(0));\n};\n","import { HandleDispatch } from \"./HandleDispatch\";\n\nexport const HeapSort = (stateArray, dispatch, speed) => {\n  let array = stateArray,\n    toDispatch = [array.slice(0)];\n  buildMaxHeap(array, toDispatch);\n  for (let endIdx = array.length - 1; endIdx > 0; endIdx--) {\n    swap(array, 0, endIdx, toDispatch);\n    toDispatch.push(endIdx);\n    siftDown(array, 0, endIdx - 1, toDispatch);\n  }\n  toDispatch.push(0);\n  toDispatch.push(array.slice(0));\n  HandleDispatch(toDispatch, dispatch, array, speed);\n};\n\nconst buildMaxHeap = (array, toDispatch) => {\n  let parentIdx = Math.floor((array.length - 2) / 2);\n  for (let currentIdx = parentIdx; currentIdx >= 0; currentIdx--) {\n    siftDown(array, currentIdx, array.length - 1, toDispatch);\n  }\n};\n\nconst siftDown = (heap, currentIdx, endIdx, toDispatch) => {\n  let firstChildIdx = currentIdx * 2 + 1;\n  while (firstChildIdx <= endIdx) {\n    const secondChildIdx =\n      currentIdx * 2 + 2 <= endIdx ? currentIdx * 2 + 2 : -1;\n    let idxToSwap;\n    if (secondChildIdx !== -1 && heap[secondChildIdx] > heap[firstChildIdx]) {\n      toDispatch.push([secondChildIdx, firstChildIdx]);\n      idxToSwap = secondChildIdx;\n    } else {\n      idxToSwap = firstChildIdx;\n    }\n    toDispatch.push([idxToSwap, currentIdx]);\n    if (heap[idxToSwap] > heap[currentIdx]) {\n      swap(heap, idxToSwap, currentIdx, toDispatch);\n      currentIdx = idxToSwap;\n      firstChildIdx = currentIdx * 2 + 1;\n    } else {\n      return;\n    }\n  }\n};\n\nconst swap = (array, i, j, toDispatch) => {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n  toDispatch.push(array.slice(0));\n};\n","import {\n  setArray,\n  setSorted,\n  setRunning,\n  deleteCurrentIndex,\n} from \"../../actions\";\nimport { BubbleSort } from \"../algorithms/BubbleSort\";\nimport { InsertionSort } from \"../algorithms/InsertionSort\";\nimport { SelectionSort } from \"../algorithms/SelectionSort\";\nimport { MergeSort } from \"../algorithms/MergeSort\";\nimport { QuickSort } from \"../algorithms/QuickSort\";\nimport { HeapSort } from \"../algorithms/HeapSort\";\n\nexport const generateArray = (dispatch, length) => {\n  let newArray = [];\n  while (newArray.length < length) {\n    newArray.push(Math.floor(Math.random() * 350) + 10);\n  }\n  dispatch(setArray(newArray));\n  dispatch(setSorted([]));\n  dispatch(deleteCurrentIndex([]));\n};\n\nexport const sort = (dispatch, array, speed, algorithm) => {\n  let doSorting =\n    algorithm === \"BubbleSort\"\n      ? BubbleSort\n      : algorithm === \"InsertionSort\"\n      ? InsertionSort\n      : algorithm === \"SelectionSort\"\n      ? SelectionSort\n      : algorithm === \"MergeSort\"\n      ? MergeSort\n      : algorithm === \"QuickSort\"\n      ? QuickSort\n      : algorithm === \"HeapSort\"\n      ? HeapSort\n      : null;\n  dispatch(setSorted([]));\n  dispatch(deleteCurrentIndex([]));\n  dispatch(setRunning(true));\n  doSorting(array, dispatch, speed);\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSize } from \"../actions\";\nimport { generateArray } from \"./visualizer/Functions\";\nimport \"./styling/Dropdown.css\";\n\nexport const SetSizeOptions = () => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const selectedSize = useSelector((state) => state.size);\n  const isRunning = useSelector((state) => state.isRunning);\n  const dispatch = useDispatch();\n\n  const sizes = [\n    {\n      title: \"10\",\n      value: 10,\n    },\n    {\n      title: \"20\",\n      value: 20,\n    },\n    {\n      title: \"40\",\n      value: 40,\n    },\n    {\n      title: \"80\",\n      value: 80,\n    },\n    {\n      title: \"160\",\n      value: 160,\n    },\n  ];\n\n  const [selected, setSelected] = useState(0);\n\n  useEffect(() => {\n    const onBodyClick = (event) => {\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick);\n\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick);\n    };\n  }, []);\n\n  const generateArraySize = (option) => {\n    dispatch(setSize(option.value));\n    generateArray(dispatch, option.value);\n    setSelected(option);\n  };\n\n  const renderedOptions = sizes.map((option) => {\n    if (option.value === selectedSize) {\n      return null;\n    }\n\n    return (\n      <div\n        key={option.value}\n        className=\"option-item\"\n        onClick={() => generateArraySize(option)}\n      >\n        {option.title}\n      </div>\n    );\n  });\n\n  return (\n    <div\n      ref={ref}\n      className=\"Dropdown\"\n      style={{ border: isRunning ? `1px solid grey` : `1px solid whitesmoke` }}\n    >\n      <label className=\"text\" style={{ color: isRunning ? \"grey\" : \"white\" }}>\n        Array Size:{\" \"}\n      </label>\n      <div\n        disabled={isRunning}\n        onClick={() => (!isRunning ? setOpen(!open) : null)}\n        className={`ui scrolling dropdown ${open ? \"visible active\" : \"\"}`}\n      >\n        {selectedSize === 0 ? (\n          <div className=\"default text\">Select Array Size</div>\n        ) : (\n          <div className=\"text\" style={{ color: isRunning ? \"grey\" : \"white\" }}>\n            {selected.title}\n          </div>\n        )}\n        <i\n          className=\"dropdown icon\"\n          style={{ color: isRunning ? \"grey\" : \"white\" }}\n        ></i>\n        <div\n          disabled={isRunning}\n          className={`menu ${open ? \"visible transition\" : \"\"}`}\n        >\n          {renderedOptions}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSpeed } from \"../actions\";\n// import { generateArray } from \"./visualizer/Functions\";\nimport \"./styling/Dropdown.css\";\n\nexport const SetSpeedOptions = () => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const selectedSize = useSelector((state) => state.speed);\n  const isRunning = useSelector((state) => state.isRunning);\n  const dispatch = useDispatch();\n\n  const speeds = [\n    {\n      title: \"Default\",\n      value: \"Default\",\n    },\n    {\n      title: \"Slow\",\n      value: \"Slow\",\n    },\n    {\n      title: \"Normal\",\n      value: \"Normal\",\n    },\n    {\n      title: \"Fast\",\n      value: \"Fast\",\n    },\n  ];\n\n  const [selected, setSelected] = useState(speeds[0]);\n\n  useEffect(() => {\n    const onBodyClick = (event) => {\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick);\n\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick);\n    };\n  }, []);\n\n  // const generateArraySize = (option) => {\n  //   dispatch(setSpeed(option.value));\n  //   generateArray(dispatch, option.value);\n  //   setSelected(option);\n  // };\n\n  const renderedOptions = speeds.map((option) => {\n    if (option.value === selectedSize) {\n      return null;\n    }\n\n    return (\n      <div\n        key={option.value}\n        className=\"option-item\"\n        onClick={() => {\n          dispatch(setSpeed(option.value));\n          setSelected(option);\n        }}\n      >\n        {option.title}\n      </div>\n    );\n  });\n\n  return (\n    <div\n      ref={ref}\n      className=\"Dropdown\"\n      style={{ border: isRunning ? `1px solid grey` : `1px solid whitesmoke` }}\n    >\n      <label className=\"text\" style={{ color: isRunning ? \"grey\" : \"white\" }}>\n        Speed:{\" \"}\n      </label>\n      <div\n        disabled={isRunning}\n        onClick={() => (!isRunning ? setOpen(!open) : null)}\n        className={`ui scrolling dropdown ${open ? \"visible active\" : \"\"}`}\n      >\n        <div className=\"text\" style={{ color: isRunning ? \"grey\" : \"white\" }}>\n          {selected.title}\n        </div>\n        <i\n          className=\"dropdown icon\"\n          style={{ color: isRunning ? \"grey\" : \"white\" }}\n        ></i>\n        <div\n          disabled={isRunning}\n          className={`menu ${open ? \"visible transition\" : \"\"}`}\n        >\n          {renderedOptions}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { generateArray, sort } from \"./Functions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SetSizeOptions } from \"../SetSizeOptions\";\nimport { SetSpeedOptions } from \"../SetSpeedOptions\";\n\nexport const BodyContents = ({ title, TypeOfSorting }) => {\n  const algorithm = useSelector((state) => state.algorithm);\n  const array = useSelector((state) => state.array);\n  const selectedSize = useSelector((state) => state.size);\n  const isRunning = useSelector((state) => state.isRunning);\n  const finishedIdx = useSelector((state) => state.setIndex);\n  const compareIdx = useSelector((state) => state.currentSwappers);\n  const selectedSpeed = useSelector((state) => state.speed);\n  const dispatch = useDispatch();\n  const speedDefault =\n    570 - Math.pow(array.length, 2) > 0 ? 570 - Math.pow(array.length, 2) : 0;\n  const speed =\n    selectedSpeed === \"Default\"\n      ? speedDefault\n      : selectedSpeed === \"Slow\"\n      ? 200\n      : selectedSpeed === \"Normal\"\n      ? 50\n      : 0;\n  const ref = useRef(null);\n  const [barWidth, setBarWidth] = useState(0);\n  useEffect(() => {\n    const numWidth = Math.floor(ref.current.offsetWidth / selectedSize);\n    setBarWidth(numWidth);\n  }, [selectedSize]);\n\n  const renderArray = array.map((value, idx) => {\n    return (\n      <div\n        className=\"array-bar\"\n        key={idx}\n        style={{\n          background: finishedIdx.includes(idx)\n            ? \"linear-gradient( to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8))\"\n            : compareIdx.includes(idx)\n            ? \"red\"\n            : \"rgb(126, 97, 160)\",\n          height: `${value}px`,\n          width: !selectedSize ? \"5px\" : `${barWidth}px`,\n        }}\n      ></div>\n    );\n  });\n\n  return (\n    <div className=\"moveInRight\">\n      <div>\n        <header>{title}</header>\n        <div className=\"generate-buttons\">\n          <button\n            disabled={isRunning}\n            className=\"ui inverted blue basic button\"\n            onClick={() => {\n              generateArray(dispatch, selectedSize);\n            }}\n          >\n            Generate New Array\n          </button>\n          <button\n            disabled={isRunning}\n            className=\"ui inverted blue basic button\"\n            onClick={() => {\n              sort(dispatch, array, speed, algorithm);\n            }}\n          >\n            {TypeOfSorting}\n          </button>\n        </div>\n        <SetSizeOptions disabled={isRunning} />\n        <SetSpeedOptions disabled={isRunning} />\n      </div>\n      <div className=\"visualizer\">\n        <div ref={ref} className=\"array-container\">\n          {renderArray}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport $ from \"jquery\";\nimport { generateArray } from \"./Functions\";\nimport { BodyContents } from \"./BodyContents\";\nimport { deleteCurrentIndex, updateAlgorithm } from \"../../actions\";\nimport { setSize } from \"../../actions\";\nimport \"../styling/Style.css\";\n\nexport const BubbbleSortVisualizer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateAlgorithm(\"BubbleSort\"));\n    generateArray(dispatch, 0);\n    dispatch(setSize(0));\n    dispatch(deleteCurrentIndex([]));\n    $(\"body\").css(\"background-color\", \"#1a1a1a\");\n    $(\".segment\").css(\"background\", \"\");\n    $(\".segment\").css(\"margin\", \"\");\n  }, []);\n\n  return <BodyContents title=\"Bubble Sort\" TypeOfSorting=\"Bubble Sort\" />;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport $ from \"jquery\";\nimport { generateArray } from \"./Functions\";\nimport { BodyContents } from \"./BodyContents\";\nimport { updateAlgorithm } from \"../../actions\";\nimport { setSize } from \"../../actions\";\nimport \"../styling/Style.css\";\n\nexport const InsertionSortVisualizer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateAlgorithm(\"InsertionSort\"));\n    generateArray(dispatch, 0);\n    dispatch(setSize(0));\n    $(\"body\").css(\"background-color\", \"#1a1a1a\");\n    $(\".segment\").css(\"background\", \"\");\n    $(\".segment\").css(\"margin\", \"\");\n  }, []);\n\n  return <BodyContents title=\"Insertion Sort\" TypeOfSorting=\"Insertion Sort\" />;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport $ from \"jquery\";\nimport { generateArray } from \"./Functions\";\nimport { BodyContents } from \"./BodyContents\";\nimport { updateAlgorithm } from \"../../actions\";\nimport { setSize } from \"../../actions\";\nimport \"../styling/Style.css\";\n\nexport const SelectionSortVisualizer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateAlgorithm(\"SelectionSort\"));\n    generateArray(dispatch, 0);\n    dispatch(setSize(0));\n    $(\"body\").css(\"background-color\", \"#1a1a1a\");\n    $(\".segment\").css(\"background\", \"\");\n    $(\".segment\").css(\"margin\", \"\");\n  }, []);\n\n  return <BodyContents title=\"Selection Sort\" TypeOfSorting=\"Selection Sort\" />;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport $ from \"jquery\";\nimport { generateArray } from \"./Functions\";\nimport { BodyContents } from \"./BodyContents\";\nimport { updateAlgorithm } from \"../../actions\";\nimport { setSize } from \"../../actions\";\nimport \"../styling/Style.css\";\n\nexport const MergeSortVisualizer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateAlgorithm(\"MergeSort\"));\n    generateArray(dispatch, 0);\n    dispatch(setSize(0));\n    $(\"body\").css(\"background-color\", \"#1a1a1a\");\n    $(\".segment\").css(\"background\", \"\");\n    $(\".segment\").css(\"margin\", \"\");\n  }, []);\n\n  return <BodyContents title=\"Merge Sort\" TypeOfSorting=\"Merge Sort\" />;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport $ from \"jquery\";\nimport { generateArray } from \"./Functions\";\nimport { BodyContents } from \"./BodyContents\";\nimport { updateAlgorithm } from \"../../actions\";\nimport { setSize } from \"../../actions\";\nimport \"../styling/Style.css\";\n\nexport const QuickSortVisualizer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateAlgorithm(\"QuickSort\"));\n    generateArray(dispatch, 0);\n    dispatch(setSize(0));\n    $(\"body\").css(\"background-color\", \"#1a1a1a\");\n    $(\".segment\").css(\"background\", \"\");\n    $(\".segment\").css(\"margin\", \"\");\n  }, []);\n\n  return <BodyContents title=\"Quick Sort\" TypeOfSorting=\"Quick Sort\" />;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport $ from \"jquery\";\nimport { generateArray } from \"./Functions\";\nimport { BodyContents } from \"./BodyContents\";\nimport { updateAlgorithm } from \"../../actions\";\nimport { setSize } from \"../../actions\";\nimport \"../styling/Style.css\";\n\nexport const HeapSortVisualizer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateAlgorithm(\"HeapSort\"));\n    generateArray(dispatch, 0);\n    dispatch(setSize(0));\n    $(\"body\").css(\"background-color\", \"#1a1a1a\");\n    $(\".segment\").css(\"background\", \"\");\n    $(\".segment\").css(\"margin\", \"\");\n  }, []);\n\n  return <BodyContents title=\"Heap Sort\" TypeOfSorting=\"Heap Sort\" />;\n};\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Home from \"./Home\";\nimport { BubbbleSortVisualizer } from \"./visualizer/BubbleSortVisualizer\";\nimport { InsertionSortVisualizer } from \"./visualizer/InsertionSortVisualizer\";\nimport { SelectionSortVisualizer } from \"./visualizer/SelectionSortVisualizer\";\nimport { MergeSortVisualizer } from \"./visualizer/MergeSortVisualizer\";\nimport { QuickSortVisualizer } from \"./visualizer/QuickSortVisualizer\";\nimport { HeapSortVisualizer } from \"./visualizer/HeapSortVisualizer\";\n\nconst App = () => {\n  return (\n    <div className=\"content\">\n      <BrowserRouter>\n        <NavBar />\n        <Route path=\"/\" exact component={Home} />\n        <Route\n          path=\"/bubblesort-visualizer\"\n          exact\n          component={BubbbleSortVisualizer}\n        />\n        <Route\n          path=\"/insertionsort-visualizer\"\n          exact\n          component={InsertionSortVisualizer}\n        />\n        <Route\n          path=\"/selectionsort-visualizer\"\n          exact\n          component={SelectionSortVisualizer}\n        />\n        <Route\n          path=\"/mergesort-visualizer\"\n          exact\n          component={MergeSortVisualizer}\n        />\n        <Route\n          path=\"/quicksort-visualizer\"\n          exact\n          component={QuickSortVisualizer}\n        />\n        <Route\n          path=\"/heapsort-visualizer\"\n          exact\n          component={HeapSortVisualizer}\n        />\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { setIndex } from \"./setIndex\";\nimport { array } from \"./array\";\nimport { isRunning } from \"./running\";\nimport { currentSwappers } from \"./swappers\";\nimport { currentSorted } from \"./sorted\";\nimport { algorithm } from \"./algorithm\";\nimport { size } from \"./size\";\nimport { speed } from \"./speed\";\n\nexport default combineReducers({\n  setIndex,\n  isRunning,\n  array,\n  currentSwappers,\n  currentSorted,\n  algorithm,\n  size,\n  speed,\n});\n","export const setIndex = (state = [], action) => {\n  if (action.type === \"SET_CURRENT_INDEX\") {\n    return [...state, action.payload];\n  } else if (action.type === \"DELETE_CURRENT_INDEX\") {\n    return action.payload;\n  }\n  return state;\n};\n","export const isRunning = (state = false, action) => {\n  if (action.type === \"SET_RUNNING\") {\n    return action.payload;\n  }\n  return state;\n};\n","export const array = (state = [], action) => {\n  if (action.type === \"SET_ARRAY\") {\n    return action.payload;\n  }\n  return state;\n};\n","export const currentSwappers = (state = [], action) => {\n  if (action.type === \"SET_SWAPPERS\") {\n    return action.payload;\n  } else {\n    return [];\n  }\n};\n","export const currentSorted = (state = [], action) => {\n  if (action.type === \"SET_SORTED\") {\n    return action.payload;\n  } else {\n    return [];\n  }\n};\n","export const algorithm = (state = null, action) => {\n  if (action.type === \"UPDATE_ALGORITHM\") {\n    return action.payload;\n  }\n  return state;\n};\n","export const size = (state = 0, action) => {\n  if (action.type === \"SET_SIZE\") {\n    return action.payload;\n  }\n  return state;\n};\n","export const speed = (state = \"\", action) => {\n  if (action.type === \"SET_SPEED\") {\n    return action.payload;\n  }\n  return state;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}